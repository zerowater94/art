apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
ext {
	javaVersion=1.8
}

compileJava {
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion

	options.fork = true
	options.forkOptions.executable = 'javac'
    options.compilerArgs << '-XDignore.symbol.file'
}

// In this section you declare where to find the dependencies of your project
repositories {
    //maven {
   //     url "http://172.16.1.81:8081/nexus/content/groups/public/"
   // }
    mavenCentral()
}


// In this section you declare the dependencies for your production and test code
dependencies {

    def jerseyVersion = "2.22.2"
    def springVersion = "4.2.5.RELEASE"

    // The production code uses the SLF4J logging API at compile time
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    //compile 'org.slf4j:slf4j-log4j12:1.7.18'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'ch.qos.logback:logback-core:1.1.7'
    compile 'commons-lang:commons-lang:2.6'
    compile 'org.codehaus.jettison:jettison:1.3.7'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.2'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.7.2'
    compile ("org.apache.commons:commons-dbcp2:2.1.1"){
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile "commons-fileupload:commons-fileupload:1.3.1"

    // spring
    compile ("org.springframework:spring-webmvc:${springVersion}"){
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-aop:${springVersion}"
    compile "org.springframework:aspectjrt:${springVersion}"
    compile "org.springframework:aspectjweaver:${springVersion}"

    // mybatis
    compile 'org.mybatis:mybatis:3.3.1'
    compile 'org.mybatis:mybatis-spring:1.2.4'

    // JDBC driver
   // compile 'org.mariadb.jdbc:mariadb-java-client:1.3.6'
    compile 'mysql:mysql-connector-java:5.1.38'
   // compile 'com.microsoft.jdbc:sqljdbc:4.0'
   // compile 'log:log4sql:7.8.0'

    compile ('commons-httpclient:commons-httpclient:3.1'){
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    // etc library
    compile 'org.apache.poi:poi:3.14'
    compile 'org.apache.poi:poi-ooxml:3.14'
    compile 'net.sourceforge.jexcelapi:jxl:2.6.12'


    testCompile 'junit:junit:4.12'
}


test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

eclipse {
    wtp {
        component {
            contextPath = project.name // 원하는 contextPath 지정. 단, 빈 컨텍스트패스는 '/' 로 지정
        }
        facet {
            facet name: 'jst.web', version: '3.0'
            facet name: 'java', version: '1.8'
            facet name: 'wst.jsdt.web', version: '1.0'
        }
    }
}